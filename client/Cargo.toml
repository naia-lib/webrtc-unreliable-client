[package]
name = "webrtc-unreliable-client"
version = "0.3.0"
authors = []
description = "Just enough hacks to connect a native client to a https://github.com/triplehex/webrtc-unreliable server"
workspace = ".."
license = "MIT OR Apache-2.0"
edition = "2021"
repository = "https://github.com/naia-lib/webrtc-unreliable-client"

[badges]
maintenance = { status = "actively-developed" }

[features]


[dependencies]
anyhow = { version = "1.0"}
bytes = { version = "1.1"}
reqwest = { version = "0.11", features = ["rustls-tls"] }
tinyjson = { version = "2.3" }
regex = { version = "1.5" }
log = { version = "0.4" }
tokio = { version = "1.15.0", features = ["full"] }
async-trait = "0.1.52"
serde = { version = "1.0.132", features = ["derive"] }
rand = { version = "0.8.4"}
thiserror = { version = "1.0.30"}
waitgroup = { version = "0.1.2"}
url = { version = "2.2.2"}
rustls = { version = "0.19.0", features = ["dangerous_configuration"]}
rcgen = { version = "0.10.0", features = ["pem", "x509-parser"]}
ring = { version = "0.16.20"}
sha-1 = { version = "0.9.1"}
sha2 = { version = "0.9.1"}
lazy_static = { version = "1.4.0"}
crc = { version = "2.1.0"}
derive_builder = { version = "0.10.2"}
ipnet = { version = "2.3.1"}
serde_derive = { version = "1.0.130"}
block-modes = { version = "0.7.0"}
byteorder = { version = "1.4.3"}
aes = { version = "0.6.0"}
subtle = { version = "2.4.1"}
ccm = { version = "0.3.0"}
aes-gcm = { version = "0.8.0"}
x509-parser = { version = "0.15.0"}
webpki = { version = "0.21.4"}
rand_core = { version = "0.6.3"}
p256 = { version = "0.11.1", features=["default", "ecdh", "ecdsa"] }
x25519-dalek = { version = "2.0.1", features = ["static_secrets"]}
hmac = { version = "0.10.1"}
elliptic-curve = { version = "0.13.8", features = ["default", "ecdh", "sec1"] }
uuid = { version = "0.8.2", features = ["v4"] }
base64 = { version = "0.13" }

[target.'cfg(not(windows))'.dependencies]
nix = { version = "0.23" }

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3.9", features = [
    "basetsd",
    "guiddef",
    "ws2def",
    "winerror",
    "ws2ipdef",
] }
